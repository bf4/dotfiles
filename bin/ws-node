#!/usr/bin/env bash

# https://github.com/creationix/nvm#manual-install
# to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)

# TODO(BF): See https://github.com/tj/n
install_nvm() {
  mkdir -p "$NVM_DIR"
  if [ ! -s "$NVM_DIR/.git" ]; then
    cwd="$(pwd)"
    trap 'cd "$cwd"' EXIT
    cd "$NVM_DIR" && \
      git init && \
      git remote add origin https://github.com/creationix/nvm.git &&
      git reset --hard origin/master
    cd "$cwd"
    trap - EXIT
    upgrade_nvm
  fi
}
upgrade_nvm() {
  cwd="$(pwd)"
  trap 'cd "$cwd"' EXIT
  # git fetch --tags
  # TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
  cd "$NVM_DIR" && \
      git fetch origin &&
      git checkout `git describe --abbrev=0 --tags`
  cd "$cwd"
  trap - EXIT
  . "$NVM_DIR/nvm.sh" # This loads nvm
  nvm install "${NODE_VERSION:6 --lts}"
  # export NODE_VERSION=${NODE_VERSION:-0.12.4}
  # nvm use "$NODE_VERSION" 1> /dev/null
  # nvm alias default "${NODE_VERSION}" 1> /dev/null
  command -v nvm | grep -q nvm || echo 'nvm not installed'
}
# https://yarnpkg.com/en/docs/install
install_yarn() {
  brew install yarn --without-node
  # *nix
  # curl -o- -L https://yarnpkg.com/install.sh | bash
  # export PATH=$HOME/.yarn/bin:$PATH
}
command="$1"
case "$command" in
  "install" )
    install_nvm
    ;;
  "upgrade" )
    upgrade_nvm
    ;;
  "yarn" )
    install_yarn
    ;;
  "" | "-h" | "--help" )
    echo "Usage: ws node [install|upgrade|yarn]"
    ;;
esac
